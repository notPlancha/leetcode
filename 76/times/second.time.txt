Wrote profile results to testcase_second.py.lprof
Timer unit: 1e-06 s

Total time: 7.35809 s
File: C:\Users\Plancha\Desktop\leetcode\.\76\second.py
Function: minWindow at line 16

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    16                                             @profile
    17                                             def minWindow(self, s: str, t: str) -> str:
    18         1          0.4      0.4      0.0      ret: deque | None = None
    19         1          2.6      2.6      0.0      mainQueue = deque(maxlen=len(s))
    20         1        350.6    350.6      0.0      t_counter = Counter(t)
    21         1          0.5      0.5      0.0      t_len = len(t)
    22         1          3.3      3.3      0.0      curr_str_counter = Counter()
    23    100001      24407.8      0.2      0.3      for i in s:
    24                                                 # expand
    25    100000      32912.3      0.3      0.4        mainQueue.append(i)
    26    100000      27884.5      0.3      0.4        if i in t_counter:
    27    100000      51592.4      0.5      0.7          curr_str_counter[i] += 1
    28    100000    2429787.7     24.3     33.0          if curr_str_counter >= t_counter: # this can be otpimized because it's comparing already compared (only first time?)
    29                                                     # contract then save if useful
    30     88671     670760.5      7.6      9.1            self.contract(mainQueue, curr_str_counter, t_counter)
    31     88671    4120221.2     46.5     56.0            ret = min(ret, mainQueue.copy(), key=len) if ret is not None else mainQueue.copy() # if I used indices it would be way faster
    32         1        170.0    170.0      0.0      return "".join(ret) if ret is not None else ""

Total time: 0.256037 s
File: C:\Users\Plancha\Desktop\leetcode\.\76\second.py
Function: contract at line 33

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    33                                             @profile
    34                                             def contract(self, curr_queue: deque, curr_counter: Counter, t_counter: Counter):
    35    177010      32217.2      0.2     12.6      while True:
    36    177010      50960.8      0.3     19.9        val = curr_queue.popleft()
    37                                                 # cannot be less
    38    177010      42468.9      0.2     16.6        if val in t_counter:
    39    177010      53528.4      0.3     20.9          if curr_counter[val] == t_counter[val]:
    40                                                     # can't contract anymore
    41     88671      26473.2      0.3     10.3            curr_queue.appendleft(val) # reput the value
    42     88671      15689.9      0.2      6.1            return
    43                                                   else:
    44     88339      34699.0      0.4     13.6            curr_counter[val] -= 1

